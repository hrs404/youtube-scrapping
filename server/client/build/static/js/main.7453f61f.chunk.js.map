{"version":3,"sources":["config/keys.js","axios/axios.js","components/listing/listing.jsx","components/listing/listingDetail.jsx","App.js","reportWebVitals.js","index.js"],"names":["configData","server","userInstance","client","axios","create","baseURL","headers","Listing","useState","loading","setLoading","list","setList","fetchList","a","get","res","data","code","useEffect","handleNewUpdate","timeSince","date","seconds","Math","floor","Date","interval","className","Button","onClick","Spinner","animation","length","map","item","i","id","videoId","window","location","href","src","thumbnails","url","alt","title","channel","num","statistics","viewCount","toFixed","publishedAt","description","substring","_id","ListingDetail","videoDetails","setVideoDetails","fetchDetails","post","lists","URLSearchParams","search","numFormatter","link","controls","likeCount","dislikeCount","height","width","subscriberCount","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7453f61f.chunk.js","sourcesContent":["import config from './config.json';\n\nconst configData = config[process.env.REACT_APP_ENV];\nexport const { server, client } = configData;\n\n\n","import axios from 'axios';\nimport {server} from '../config/keys';\n\nexport const userInstance = axios.create({\n  baseURL: `${server}/api`,\n  headers: { \"Content-Type\": 'application/json' }\n});\n","import React, { useEffect, useState } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { userInstance } from '../../axios/axios';\nimport './listing.css';\n\nconst Listing = () => {\n  const [loading, setLoading] = useState(false);\n  const [list, setList] = useState([]);\n\n  const fetchList = async () => {\n    setLoading(true);\n    const res = await userInstance.get('/listing');\n    setLoading(false);\n    if (res.data.code === 200) {\n      setList(res.data.list);\n    }\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n\n  const handleNewUpdate = async () => {\n    setLoading(true);\n    const res = await userInstance.get('/updatedListing');\n    setLoading(false);\n    if (res.data.code === 200) {\n      setList(res.data.list);\n    }\n  };\n\n  const handleVideoDetails = (id) => {\n    window.location.href = `/detail?v=${id}`;\n  };\n\n  const timeSince = (date) => {\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes';\n    }\n    return Math.floor(seconds) + ' seconds';\n  };\n\n  const numFormatter = (num) => {\n    if (num > 999 && num < 1000000) {\n      return (num / 1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million\n    } else if (num >= 1000000 && num < 1000000000) {\n      return (num / 1000000).toFixed(1) + 'M'; // convert to M for number from > 1 million\n    } else if (num >= 100000000 && num < 1000000000000) {\n      return (num / 100000000).toFixed(2) + 'B';\n    } else if (num >= 1000000000000)\n      return (num / 1000000000000).toFixed(2) + 'T';\n    else return num; // if value < 1000, nothing to do\n  };\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-md-12'>\n          <div className='listing-page'>\n            <h4 className='mb-5'>Trending List </h4>\n            <div className='update-btn'>\n              <Button onClick={handleNewUpdate}>Update List</Button>\n            </div>\n            {loading ? (\n              <Spinner animation='border' />\n            ) : (\n              <div className='list-view-section'>\n                {list && list.length !== 0 ? (\n                  list.map((item, i) => (\n                    <div\n                      className='listing-box-list-view'\n                      key={item._id}\n                      onClick={() => handleVideoDetails(item.videoId)}\n                    >\n                      <div className='listing-img'>\n                        <img src={item.thumbnails[2].url} alt='image1' />\n                      </div>\n                      <div className='listing-content'>\n                        <h6>{item.title}</h6>\n                        <p>\n                          <span>{item.channel && item.channel.title}</span> .{' '}\n                          <span>\n                            {numFormatter(item.statistics.viewCount)} Views\n                          </span>{' '}\n                          <span>{timeSince(new Date(item.publishedAt))}</span>\n                        </p>\n                        <p>\n                          {item.description.length > 180\n                            ? item.description.substring(0, 180) + '...'\n                            : item.description}\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div>No records</div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Listing;\n","import React, { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { userInstance } from '../../axios/axios';\nimport './listing.css';\n\nconst ListingDetail = () => {\n  const [videoDetails, setVideoDetails] = useState();\n  const [list, setList] = useState([]);\n\n  const fetchDetails = async (videoId) => {\n    const res = await userInstance.post('/getVideoDetails', { videoId });\n    if (res.data.code === 200) {\n      setVideoDetails(res.data.videoDetails);\n      setList(res.data.lists);\n    }\n  };\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const videoId = urlParams.get('v');\n    if (videoId) {\n      fetchDetails(videoId);\n    }\n  }, []);\n\n  const timeSince = (date) => {\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n      return Math.floor(interval) + ' years';\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n      return Math.floor(interval) + ' months';\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n      return Math.floor(interval) + ' days';\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n      return Math.floor(interval) + ' hours';\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n      return Math.floor(interval) + ' minutes';\n    }\n    return Math.floor(seconds) + ' seconds';\n  };\n\n  const numFormatter = (num) => {\n    if (num > 999 && num < 1000000) {\n      return (num / 1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million\n    } else if (num >= 1000000 && num < 1000000000) {\n      return (num / 1000000).toFixed(1) + 'M'; // convert to M for number from > 1 million\n    } else if (num >= 100000000 && num < 1000000000000) {\n      return (num / 100000000).toFixed(2) + 'B';\n    } else if (num >= 1000000000000)\n      return (num / 1000000000000).toFixed(2) + 'T';\n    else return num; // if value < 1000, nothing to do\n  };\n\n  const handleVideoDetails = (id) => {\n    window.location.href = `/detail?v=${id}`;\n  };\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-md-12'>\n          <div className='listing-detail-page'>\n            <div className='detail-page-section'>\n              <div className='left-section'>\n                <div className='video-section'>\n                  <ReactPlayer\n                    url={videoDetails && videoDetails.link}\n                    controls\n                  />\n                  {/* <h5>#1 ON TRENDING FOR MUSIC</h5> */}\n                  <h4>{videoDetails && videoDetails.title}</h4>\n                  <div className='bottomtext'>\n                    <p>\n                      {numFormatter(\n                        videoDetails && videoDetails.statistics.viewCount\n                      )}{' '}\n                      Views,\n                      {timeSince(\n                        new Date(videoDetails && videoDetails.publishedAt)\n                      )}\n                    </p>\n                    <div className='like-section'>\n                      <span>\n                        {numFormatter(\n                          videoDetails && videoDetails.statistics.likeCount\n                        )}{' '}\n                        likes\n                      </span>\n                      <span>\n                        {numFormatter(\n                          videoDetails && videoDetails.statistics.dislikeCount\n                        )}{' '}\n                        dislikes\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className='channel-section'>\n                  <img\n                    src={videoDetails && videoDetails.channel.thumbnails[2].url}\n                    height='50'\n                    width='50'\n                    alt='channel-thumbnail'\n                  />\n                  <div className='channel-name'>\n                    <h6>{videoDetails && videoDetails.channel.title}</h6>\n                    <span>\n                      {numFormatter(\n                        videoDetails &&\n                          videoDetails.channel.statistics.subscriberCount\n                      )}\n                      {'  '}\n                      <small> &nbsp;subscribers</small>\n                    </span>\n                    <p>{videoDetails && videoDetails.description}</p>\n                  </div>\n                </div>\n              </div>\n              <div className='right-section'>\n                <div className='list-view-section'>\n                  {list && list.length !== 0 ? (\n                    list.map((item, i) => (\n                      <div\n                        className='listing-box-list-view'\n                        key={item._id}\n                        onClick={() => handleVideoDetails(item.videoId)}\n                      >\n                        <div className='listing-img'>\n                          <img src={item.thumbnails[2].url} alt='image1' />\n                        </div>\n                        <div className='listing-content'>\n                          <h6>{item.title}</h6>\n                          <p>\n                            <span>{item.channel && item.channel.title}</span> .{' '}\n                            <span>\n                              {numFormatter(item.statistics.viewCount)} Views\n                            </span>{' '}\n                            <span>{timeSince(new Date(item.publishedAt))}</span>\n                          </p>\n                          <p>\n                            {item.description.length > 100\n                              ? item.description.substring(0, 100) + '...'\n                              : item.description}\n                          </p>\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <div>No records</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ListingDetail;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport Listing from './components/listing/listing';\nimport ListingDetail from \"./components/listing/listingDetail\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n     <Router>\n      <Switch>\n        <Route exact path='/' component={Listing} />\n        <Route path='/detail'component={ListingDetail} />\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}